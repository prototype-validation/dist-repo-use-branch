name: validation-proxy

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
env:
  repository: prototype-validation/dist-repo-use-branch_upstream # 可以指定独立的仓库，也可以使用 ${{ github.repository }}
  main_branch: ${{ github.ref }} # 如果指定了独立的仓库且主分支与当前仓库不一致则需要指定主分支，如果一致则可用 ${{ github.ref }}
  cd_branch_prefix: ${{ github.ref }}_-_cd_-_ # 如果指定了独立的仓库且主分支与当前仓库不一致则需要指定分支前缀的前缀，如果一致则可用 ${{ github.ref }}
  dist_branch_prefix: ${{ github.ref }}_-_dist_-_ # 如果指定了独立的仓库且主分支与当前仓库不一致则需要指定分支前缀的前缀，如果一致则可用 ${{ github.ref }}
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      # ::set-output 命令将被弃用，而 env 又不能直接在下面非 steps 中使用，而 steps 又不支持 uses 使用 action yml 文件……因此这里转发使用 env
      repository: ${{ env.repository }}
      main_branch: ${{ env.main_branch }}
      cd_branch_prefix: ${{ env.cd_branch_prefix }}
      dist_branch_prefix: ${{ env.dist_branch_prefix }}
    steps:
      - id: nothing-step
        run: |
          echo "这一步是必要的，去掉会报错。env.repository=${{ env.repository }}"
  build:
    needs: setup
    uses: ./.github/workflows/validation.yml
    secrets: inherit
    with:
      repository: ${{ needs.setup.outputs.repository }}
      main_branch: ${{ needs.setup.outputs.main_branch }}
      cd_path: "${{ inputs.name }}/ci"
      cd_branch: "${{ needs.setup.outputs.cd_branch_prefix }}${{ inputs.name }}"
      dist_path: "${{ inputs.name }}/src"
      dist_branch: "${{ needs.setup.outputs.dist_branch_prefix }}${{ inputs.name }}"
  sync:
    uses: ./.github/workflows/sync.yml
    secrets: inherit
    needs: [setup, build]
    with:
      upstream_sync_branch: "${{ needs.setup.outputs.dist_branch_prefix }}${{ inputs.name }}"
      upstream_sync_repo: ${{ needs.setup.outputs.repository }}